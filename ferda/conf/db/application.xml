<icegrid>	<application name="FerdaModulesApplication">		<replica-group id="FerdaDataPreparationBoxesReplicaAdapter">			<object identity="DataPreparation.DataSource.Database" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="DataPreparation.DataSource.DataTable" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="DataPreparation.DataSource.Column" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="DataPreparation.Categorization.EachValueOneCategory" type="::Ferda::Modules::BoxModuleFactoryCreator"/><!--			<object identity="DataPreparation.Categorization.EquidistantIntervals" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="DataPreparation.Categorization.EquifrequencyIntervals" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="DataPreparation.Categorization.Attribute" type="::Ferda::Modules::BoxModuleFactoryCreator"/>-->		</replica-group>		<replica-group id="FerdaBasicBoxesReplicaAdapter">			<object identity="BoolT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="ShortT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="IntT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="LongT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="FloatT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="DoubleT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="StringT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="TimeT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="DateT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="DateTimeT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>			<object identity="CategoriesT" type="::Ferda::Modules::PropertyBoxModuleFactoryCreator"/>		</replica-group>		<replica-group id="FerdaSampleBoxesReplicaAdapter">			<object identity="Sample.BodyMassIndex" type="::Ferda::Modules::BoxModuleFactoryCreator"/>		</replica-group>		<replica-group id="FerdaGuhaMiningBoxesReplicaAdapter">			<object identity="GuhaMining.FixedAtom" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="GuhaMining.AtomSetting" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="GuhaMining.Sign" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="GuhaMining.ClassOfEquivalence" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="GuhaMining.ConjunctionSetting" type="::Ferda::Modules::BoxModuleFactoryCreator"/>			<object identity="GuhaMining.DisjunctionSetting" type="::Ferda::Modules::BoxModuleFactoryCreator"/>		</replica-group>		<replica-group id="FerdaGuhaMiningProcessorReplicaAdapter">			<object identity="Ferda.Guha.MiningProcessor.MiningProcessorFunctions" type="::Ferda::Guha::MiningProcessor::MiningProcessorFunctions"/>		</replica-group>		<service-template id="FerdaServiceTemplate">			<parameter name="name"/>			<parameter name="entry"/>			<parameter name="endpoints"/>			<service name="${name}" entry="${entry}">				<adapter name="${service}"					register-process="true"					endpoints="${endpoints}"					replica-group="${service}ReplicaAdapter"/>			</service>		</service-template>		<server-template id="FerdaServerTemplate">			<parameter name="index"/>			<parameter name="endpoints" default="tcp:udp"/>			<parameter name="pwd" default="${application.distrib}"/>			<icebox id="${index}" exe="iceboxnet" activation="on-demand" pwd="${pwd}">				<service-instance template="FerdaServiceTemplate" name="FerdaDataPreparationBoxes" entry="FerdaDataPreparationBoxes.dll:Ferda.Modules.Boxes.DataPreparation.Service" endpoints="${endpoints}"/>				<service-instance template="FerdaServiceTemplate" name="FerdaBasicBoxes" entry="FerdaBasicBoxes.dll:Ferda.Modules.Boxes.Basic.Service" endpoints="${endpoints}"/>				<service-instance template="FerdaServiceTemplate" name="FerdaSampleBoxes" entry="FerdaSampleBoxes.dll:Ferda.Modules.Boxes.Sample.Service" endpoints="${endpoints}"/>				<service-instance template="FerdaServiceTemplate" name="FerdaGuhaMiningBoxes" entry="FerdaGuhaMiningBoxes.dll:Ferda.Modules.Boxes.GuhaMining.Service" endpoints="${endpoints}"/>				<service-instance template="FerdaServiceTemplate" name="FerdaGuhaMiningProcessor" entry="Ferda.MiningProcessor.dll:Ferda.Guha.MiningProcessor.Service" endpoints="${endpoints}"/>				<property name="Ice.ThreadPool.Server.Size" value="10"/>				<property name="Ice.ThreadPool.Server.SizeMax" value="1000"/>				<property name="Ice.ThreadPool.Server.SizeWarn" value="950"/>				<property name="IceBox.UseSharedCommunicator.FerdaDataPreparationBoxes" value="1"/>				<property name="IceBox.UseSharedCommunicator.FerdaBasicBoxes" value="1"/>				<property name="IceBox.UseSharedCommunicator.FerdaSampleBoxes" value="1"/>				<property name="IceBox.UseSharedCommunicator.FerdaGuhaMiningBoxes" value="1"/>				<property name="IceBox.UseSharedCommunicator.FerdaGuhaMiningProcessor" value="1"/>			</icebox>		</server-template>		<node name="Local">			<server-instance template="FerdaServerTemplate" index="0" pwd="bin/Server" endpoints="tcp -h 127.0.0.1 :udp -h 127.0.0.1"/>		</node>	</application></icegrid>