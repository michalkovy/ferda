<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
	"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article lang="cs">
  <articleinfo>
    <author>
      <firstname>Martin</firstname>
      <surname>Ralbovský</surname>
      <email>martin.ralbovsky@gmail.com</email>
    </author>
    <pubdate>2006-03-21</pubdate>
    <title>Úpravy specifikace po podrobné analýze</title>
    <titleabbrev>UpravySpecifikace</titleabbrev>
  </articleinfo>
  <abstract>
    <para>
      Tento dokument pojednává o modifikacích specifikace v průběhu
      vývoje projektu. Zároveň nabízí stručný přehled splněných
      a nesplněných bodů původní specifikace.
    </para>
  </abstract>
  <section>
    <title>Modifikace specifikace</title>
    <para>
      I když se projektový team snažil co nejvíce držet specifikace, z podrobné
      analýzy problému vyplynulo, že některé části specifikace nemůžou být splněny
      a to ať už z podstaty problému, nebo z důvodu přílišné náročnosti jednotlivých
      bodů. Proto muselo dojít k modifikacím původní specifikace, zejména se jedná
      o rozhodnutí neimplementovat procedury KEX a TimeTransf.
      Tyto modifikace byly podrobně
      konzultovány s vedoucím projektu. Vedoucí projektu souhlasil s těmito modifikacemi
      a Ferda byl dále vyvíjen s ohledem na ně.
    </para>
  </section>
    <section>
      <title>Splněné body původní specifikace</title>
      <itemizedlist mark="bullet">
        <listitem>
          <para>
            Zjednodušení a zpřehlednění dobývání znalostí
          </para>
        </listitem>
        <listitem>
          <para>
            Návrh a implementace vizuálního modelu dataminingových postupů
          </para>
        </listitem>
        <listitem>
          <para>
            Vytvořen prostředek pro uchování typových úloh dataminingu
          </para>
        </listitem>
        <listitem>
          <para>
            Vytvoření modulární aplikace s možností snadného přidávání nových modulů
          </para>
        </listitem>
        <listitem>
          <para>
            Implementace 4ft
          </para>
        </listitem>
        <listitem>
          <para>
            Implementace SD4ft
          </para>
        </listitem>
        <listitem>
          <para>
            Implementace KL
          </para>
        </listitem>
        <listitem>
          <para>
            Implementace SDKL
          </para>
        </listitem>
        <listitem>
          <para>
            Implementace CF
          </para>
        </listitem>
        <listitem>
          <para>
            Implementace SDCF
          </para>
        </listitem>
        <listitem>
          <para>
            Implementace Datasource
          </para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Nesplněné body původní specifikace</title>
      <itemizedlist mark="bullet">
        <listitem>
          <para>Implementace KEX</para>
        </listitem>
        <listitem>
          <para>Implementace TimeTransf</para>
        </listitem>
        <listitem>
          <para>Komplexní kontextová nápověda</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Důvody pro modifikaci původní specifikace</title>
      <para>
        Procedura KEX, která je určena pro symbolické strojové učení z
        příkladů a jejím výsledkem jsou vážená rozhodovací pravidla, která
        mohou být použita ke klasifikaci, nebyla v projektu implementována.
        Důvodem je, že by splnění tohoto úkolu bylo neúměrně náročná či
        dokonce nemožná. Jednotlivé procedury LISp-Mineru (4ft, SD4ft, KL,
        SDKL, CF a SDCF) jsou implementovány a byly nám dodány jako trojice
        spustitelných souborů (např 4ftTask, 4ftGen, a 4ftResult), které spolu
        komunikují prostřednictvím metabáze - společného úložiště dat
        generovaných všemi moduly systému. Zde se hodí stručně vysvětlit úlohy
        těchto souborů: *Task.exe slouží uživateli k formulaci úlohy pro
        příslušný miner, *Gen.exe slouží pro vlastní generování a verifikaci
        hypotéz a nakonec *Result.exe slouží pro prohlížení výsledků
        (hypotéz). Jelikož ve Ferdovi jsou úlohy formulovány pomocí principu
        visuálního programování, nebyly pro nás *Task.exe soubory nikterak
        důležité, navíc jsme ve Ferdovi implementovali vlastní ResultBrowser,
        tedy ani *Result.exe soubory pro nás nebyly podstatné a vůbec je
        nepoužíváme. Rozhodující byly pro nás *Gen.exe soubory, jimž se jako
        parametr předá ODBC připojovací řetězec k metabázi (kterou Ferda sám
        dočasně vytvoří a vyplní tj. Ferda simuluje *Task.exe) a číslo úlohy,
        která se má vykonat. Bohužel k proceduře KEX neexistuje soubor
        KexGen.exe. Tato neexistence je způsobena historickými důvody z období
        vzniku prvních procedur LISp-Mineru. KEX má pouze programy KexTask.exe
        a KexResult.exe. Úloha se zde spouští pouze přímo z grafického
        prostředí programu KexTask.exe, proto by zahrnutí KEXu do Ferdy, při
        nemožnosti obdržení zdrojových kódů KEXu a jeho úprav či přímé
        integrace do Ferdy bylo neúměrně složité.
      </para>
      <para>
        Procedura TimeTransf se zabývá předzpracováním a vizuální analýzou
        časových řad.  Tato procedura se od ostatních procedur LISp-Mineru v
        mnohých směrech odlišuje, především tím, že svoje výsledky zapisuje
        přímo do primární – analyzované – databáze. Metabázi nepoužívá pro
        výměnu dat s ostatními moduly, ale pouze jako úložiště svého
        nastavení. V průběhu analýzy projektu se ukázalo, že přímá spolupráce
        mezi TimeTransfem a ostatními procedurami LISp-Mineru není možná a
        tedy by nebylo přínosem vytvářet krabičky, které by práci TimeTransfu
        ve Ferdovi zastoupili, navíc by zřejmě, co do funkcionality, šlo o
        kopii současné implementace TimeTransfu.
      </para>
      <para>
        Vedoucí projektu Doc. RNDr. Jan Rauch, CSc pracuje na kompletní
        teoretické nápovědě pro systém LISp-Miner. Na začátku projektu jsme se dohodli,
        že naše kontextová nápověda LISp krabiček bude silně navázaná právě na tuto
        nápovědu. Nápověda má být ve formě pdf souborů a odkazů do nich pro jednotlivé
        části procesu dobývání znalostí. Bohužel do této chvíle doc. Rauch nedokončil
        tuto nápovědu a proto na ni nemůžeme odkazovat v krabičkách Ferdy. Prostředí pro
        integraci této nápovědy je však připraveno, například můžeme vidět nápovědu
        pro uživatelské prostředí nebo pro moduly pro interakci ve formátu pdf. Z tohoto
        důvodu nemůžeme plně dostát závazkům, které jsme dali ve specifikaci na
        komplexní kontextovou nápovědu.
      </para>
    </section>
</article>