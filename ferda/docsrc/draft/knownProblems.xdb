<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<article lang="en">
  <articleinfo>
    <title>Known problems in Ferda implementation</title>
    <author>
      <firstname>Martin</firstname>
      <surname>Ralbovský</surname>
      <email>martin.ralbovsky@gmail.com</email>
    </author>
  </articleinfo>

  <abstract>
    <para>
      This document describes the known problems of the recent Ferda and the
      reasons why these problems are present.
    </para>
  </abstract>
  <para>
    Ferda does not work with installed both .NET Framework version 1.x and 2.0, only 2.0 
    has to be installed. This problem is there because Ice is compilled with .NET 
    Framework 1.x and if you have installed .NET 1.x, IceBox will be started with 
    this version of framework, but it have to load .NET 2.0 assemblies dynamically, 
    but it is not possible. This problem will be repaired with new version of Ice, which 
    will be done for .NET Framework 2.0.
  </para>
  <para>
    Ferda does not show progress while executes tasks over (old) LISp-Miner tasks and 
    executing is quite slow. The time before showing *Gen progress dialog is spent by 
    geting all configurations form all connected boxes, conversion of this setting to 
    setting understandable for LISp-Miners Gens (because boxes of Ferda are providing 
    extended functionality), but some configurations are not so trivial e.g. all 
    Dynamic Attributes has to (if it is not done yet) generate attribute setting 
    (often according to actual data in analyzed database). After that this entire
    configuration is stored in new LISp-Miner Empty Metabase (Microsoft Access 
    database connected by ODBC driver). Point is that it can be often more than 
    thousands of records i.e. thousands of queries. (This step is naturally slower 
    than working with LISp-Miner implementation because there is all configuration 
    saved immediately after setting ... this is not possible in Ferda because 
    replication (copying) of data would be very difficult because of many differences 
    (for all we can mention "shared archive of partial cedent settings")). The time 
    after *Gen progress dialog is also quite long but all operations for getting 
    results from metabase are optimized (i.e. minimum of SQL queries are executed and 
    most of work is made in memory).
  </para>
  <para>
    This is not bug but rather answer to frequently asked question: Statistics for some
    columns are not shown. This is caused by the datatype of the column because many DB
    systems does not support aggregation functions over columns of some datatypes (e.g.
    BLOB, MEMO, ...). Computing of statistics without aggregation functions would be 
    very, very slow and not effective and using this kind of columns for data mining is 
    not very common, so we were not trying to slove this problem by own simulation of 
    this functions.
  </para>
  <para>
    Docking problems - sometimes when the user tries to make the docking area smaller, then
    scrollbars appear (they are not needed there). Also sometimes the docking behavior
    is little weird, user wants to dock it somewhere, but the environment does not
    allow it. These problem are caused by the imperfection of the docking 
    library we use - DockDotNET. Switching to another library that has these
    problems solved or fixing them in the DockDotNET(the library is no longer under
    development) would fix these problems.     
  </para>
  <para>
    Performance problem - slow redrawing of the archive. In projects with hunderds of  boxes,
    each action that needs the archive to be reconstructed is quite slow (the more
    boxes to be displayed, the slower the archive). We think that the problem is in
    the slow implementation of the TreeView class in the .NET Framework. Although we
    tried to use the whole list to be displayed in the archive at once, it performed
    the same behavior as in a adding the item in cycle.     
  </para>
  <para>
    We use the <classname>PropertyGrid</classname> class for a unified showing of
    box's properties. Using this component has many advantages, but also some
    disadvantages (in general there are far more advantages). One of the disadvantages
    of the PropertyGrid is forced alphabetical sorting inside property categories. 
    This means (and this is a common problem with all the applications that use
    PropertyGrid for example Visual Studio) that if we have a minimal property and a
    maximal property, the maximal property will be listed before the minimal property.
    It is not very common sense, but there is nothing we can do about it.
  </para>
  <para>
    User may encounter problems using CF-Miner. When using some quantifiers, a strange
    error message appears saying that something is wrong and the hypotheses generation
    won't continue. This problem is caused by the implementation of LISp-Miner gens.
    It is caused by a wrong parameter setting of the task. The message is show to the
    user, but there is no sign of error in the metabase during the setup.
    That is why Ferda cannot know that there was an error and cannot react. 
  </para>
</article>
