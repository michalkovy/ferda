<?xml version="1.0"?>
<project name="Slice to C# and java" default="slice" basedir=".">
	<description>Generates .cs and .java files from slice</description>
	<!--
		Požadované vlastnosti:
			* build.dir		- (path) kam se má vytvořená dokumentace dát
	-->
	<target name="clean" description="Smaže vytvořené">
		<delete failonerror="false">
			<fileset basedir="${build.dir}">
				<include name="**/generated/**.cs"/>
			</fileset>
		</delete>
		<delete failonerror="false">
			<fileset basedir="${build.dir}">
				<include name="**/generated/**.java"/>
			</fileset>
		</delete>
		<delete dir="${path::combine(moddoc.dir,'modules')}" failonerror="false"/>
		
    <!-- generovane soubory, ktere byly driv generovany do spatneho adresare (mely by byt v podadresari generated), pozdeji bude mozne nasledujici tag smazat -->
    <delete failonerror="false">
			<fileset basedir="${build.dir}/Modules/BoxModulesServices/OntologyRelated/">
				<include name="OWLParser.cs"/>
				<include name="OntologyData.cs"/>
			</fileset>
		</delete>
	</target>
	<target name="slice" description="Create C# files from slice">
		<uptodate property="actual1">
			<sourcefiles>
				<include name="Modules/*.ice"/>
			</sourcefiles>
			<targetfiles>
				<include name="${build.dir}/Base/Modules/Core/Base/generated/*.cs"/>
			</targetfiles>
		</uptodate>
		<uptodate property="actual2">
			<sourcefiles>
				<include name="Modules/Boxes/**/*.ice"/>
			</sourcefiles>
			<targetfiles>
				<include name="${build.dir}/Modules/BoxModulesServices/**/generated/*.cs"/>
			</targetfiles>
		</uptodate>
		<uptodate property="actual3">
			<sourcefiles>
				<include name="NetworkArchive/*.ice"/>
			</sourcefiles>
			<targetfiles>
				<include name="${build.dir}/NetworkArchive/generated/*.cs"/>
			</targetfiles>
		</uptodate>
		<uptodate property="actual4">
			<sourcefiles>
				<include name="Modules/*.ice"/>
			</sourcefiles>
			<targetfiles>
				<include name="${build.dir}/Modules/FerdaOWLParser/**/generated/**.java"/>
			</targetfiles>
		</uptodate>
		<uptodate property="actual5">
			<sourcefiles>
				<include name="ModulesManager/*.ice"/>
			</sourcefiles>
			<targetfiles>
				<include name="${build.dir}/Base/ModulesManager/generated/*.cs"/>
			</targetfiles>
		</uptodate>
		<if test="${not(actual1) or not(actual2) or not(actual3) or not(actual4) or not(actual5)}">
			<echo message="Generuji .cs z .ice souboru v adresari Modules..."/>
			<mkdir dir="${build.dir}/Base/Modules/Core/Base/generated"/>
			<exec program="slice2cs">
				<arg value="-I."/>
				<arg value="--output-dir"/>
				<arg value="${build.dir}/Base/Modules/Core/Base/generated"/>
				<arg file="Modules/Modules.ice"/>
				<arg file="Modules/Exceptions.ice"/>
				<arg file="Modules/BoxType.ice"/>
				<arg file="Modules/BuiltinSequences.ice"/>
				<arg file="Modules/BasicPropertyTypes.ice"/>
				<arg file="Modules/OtherPropertyTypes.ice"/>
				<arg file="Modules/Common.ice"/>
				<arg file="Modules/Guha.Attribute.ice"/>
				<arg file="Modules/Guha.Data.ice"/>
				<arg file="Modules/Guha.Math.ice"/>
				<arg file="Modules/Guha.Math.Quantifiers.ice"/>
				<arg file="Modules/Guha.MiningProcessor.ice"/>
				<arg file="Modules/OntologyData.ice"/>
			</exec>
			<echo message="Generuji .cs z .ice souboru v adresari ModulesManager..."/>
			<mkdir dir="${build.dir}/Base/ModulesManager/generated"/>
			<exec program="slice2cs">
				<arg value="-I."/>
				<arg value="--output-dir"/>
				<arg value="${build.dir}/Base/ModulesManager/generated"/>
				<arg file="ModulesManager/ManagersEngine.ice"/>
			</exec>
			
			<echo message="Generuji .cs z .ice souboru v adresari NetworkArchive..."/>
			<mkdir dir="${build.dir}/NetworkArchive/generated"/>
			<exec program="slice2cs">
				<arg value="-I."/>
				<arg value="--output-dir"/>
				<arg value="${build.dir}/NetworkArchive/generated"/>
				<arg file="NetworkArchive/Archive.ice"/>
			</exec>

			<echo message="Generuji .cs z .ice souboru v adresari Modules/Boxes..."/>
			<property name="parentDirectoryName" value="${path::get-full-path('Modules/Boxes/')}"/>
			<!-- <echo message="Parent directory name: ${parentDirectoryName}" /> -->
			<foreach item="Folder" property="foldername">
				<in>
					<items>
						<include name="Modules/Boxes/**"/>
					</items>
				</in>
				<do>
					<!-- <echo message="Folder name: ${path::get-full-path(foldername)}" /> -->
					<!-- <echo message="***: ${foldername}" />  -->
					<if test="${not(string::ends-with(foldername, 'Boxes'))}">
						<!-- <echo message="foldername          : ${foldername}" />
						<echo message="parentDirectoryName : ${parentDirectoryName}" /> -->
<!--						<if test="${platform::is-win32()}"> -->
							<property name="directoryName" value="${string::substring(foldername, string::get-length(parentDirectoryName), string::get-length(path::get-full-path(foldername)) - string::get-length(parentDirectoryName))}"/>
						<!-- </if>
						<if test="${not(platform::is-win32())}">
							<property name="directoryName" value="${string::substring(foldername, string::get-length(parentDirectoryName), string::get-length(path::get-full-path(foldername)) - string::get-length(parentDirectoryName))}"/>
						</if>-->
						<!-- <echo message="Directory name: ${directoryName}" /> -->
						<property name="dirPath" value="${path::combine(path::combine(path::combine(build.dir,'Modules/BoxModulesServices/'), directoryName), 'generated')}"/>
					</if>
					<foreach item="File" property="filename">
						<in>
							<items>
								<include name="${foldername}/*.ice"/>
							</items>
						</in>
						<do>
							<mkdir dir="${dirPath}"/>
							<exec program="slice2cs">
								<arg value="-I."/>
								<arg value="--output-dir"/>
								<arg value="${dirPath}"/>
								<arg file="${filename}"/>
							</exec>
						</do>
					</foreach>
				</do>
			</foreach>
			
			<echo message="Generuji .java z .ice souboru pro FerdaOWLParser..."/>
			<mkdir dir="${build.dir}/Modules/FerdaOWLParser"/>
			<exec program="slice2java">
				<arg value="-I."/>
				<arg value="--output-dir"/>
				<arg value="${build.dir}/Modules/FerdaOWLParser"/>
				<arg file="Modules/OntologyData.ice"/>
				<arg file="Modules/OWLParser.ice"/>
			</exec>
			
			<echo message="Generuji .cs z .ice souboru pro FerdaOWLParser..."/>
			<mkdir dir="${build.dir}/Modules/BoxModulesServices/OntologyRelated/generated"/>
			<exec program="slice2cs">
				<arg value="-I."/>
				<arg value="--output-dir"/>
				<arg value="${build.dir}/Modules/BoxModulesServices/OntologyRelated/generated"/>
				<arg file="Modules/OWLParser.ice"/>
			</exec>
			
		</if>
	</target>
	<target name="doc">
	
	</target>
</project>
