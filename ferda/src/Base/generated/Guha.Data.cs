//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.7
//
// <auto-generated>
//
// Generated from file `Guha.Data.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;

#pragma warning disable 1591

namespace Ferda
{
    namespace Guha
    {
        namespace Data
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public abstract class nullValueConstant
            {
                public const string value = "Null";
            }

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            [global::System.Serializable]
            public partial class DatabaseConnectionSetting : global::System.ICloneable
            {
                #region Slice data members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string providerInvariantName;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string connectionString;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public global::Ferda.Modules.DateTimeT lastReloadRequest;

                #endregion

                partial void ice_initialize();

                #region Constructors

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public DatabaseConnectionSetting()
                {
                    this.providerInvariantName = "";
                    this.connectionString = "";
                    ice_initialize();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public DatabaseConnectionSetting(string providerInvariantName, string connectionString, global::Ferda.Modules.DateTimeT lastReloadRequest)
                {
                    this.providerInvariantName = providerInvariantName;
                    this.connectionString = connectionString;
                    this.lastReloadRequest = lastReloadRequest;
                    ice_initialize();
                }

                #endregion

                #region ICloneable members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override int GetHashCode()
                {
                    int h_ = 5381;
                    global::IceInternal.HashUtil.hashAdd(ref h_, "::Ferda::Guha::Data::DatabaseConnectionSetting");
                    global::IceInternal.HashUtil.hashAdd(ref h_, providerInvariantName);
                    global::IceInternal.HashUtil.hashAdd(ref h_, connectionString);
                    global::IceInternal.HashUtil.hashAdd(ref h_, lastReloadRequest);
                    return h_;
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override bool Equals(object other)
                {
                    if(object.ReferenceEquals(this, other))
                    {
                        return true;
                    }
                    if(other == null)
                    {
                        return false;
                    }
                    if(GetType() != other.GetType())
                    {
                        return false;
                    }
                    DatabaseConnectionSetting o = (DatabaseConnectionSetting)other;
                    if(this.providerInvariantName == null)
                    {
                        if(o.providerInvariantName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.providerInvariantName.Equals(o.providerInvariantName))
                        {
                            return false;
                        }
                    }
                    if(this.connectionString == null)
                    {
                        if(o.connectionString != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.connectionString.Equals(o.connectionString))
                        {
                            return false;
                        }
                    }
                    if(this.lastReloadRequest == null)
                    {
                        if(o.lastReloadRequest != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.lastReloadRequest.Equals(o.lastReloadRequest))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator==(DatabaseConnectionSetting lhs, DatabaseConnectionSetting rhs)
                {
                    return Equals(lhs, rhs);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator!=(DatabaseConnectionSetting lhs, DatabaseConnectionSetting rhs)
                {
                    return !Equals(lhs, rhs);
                }

                #endregion

                #region Marshaling support

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_writeMembers(global::Ice.OutputStream ostr)
                {
                    ostr.writeString(this.providerInvariantName);
                    ostr.writeString(this.connectionString);
                    ostr.writeValue(this.lastReloadRequest);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_readMembers(global::Ice.InputStream istr)
                {
                    this.providerInvariantName = istr.readString();
                    this.connectionString = istr.readString();
                    istr.readValue((global::Ferda.Modules.DateTimeT v) => { this.lastReloadRequest = v; });
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static void ice_write(global::Ice.OutputStream ostr, DatabaseConnectionSetting v)
                {
                    if(v == null)
                    {
                        _nullMarshalValue.ice_writeMembers(ostr);
                    }
                    else
                    {
                        v.ice_writeMembers(ostr);
                    }
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static DatabaseConnectionSetting ice_read(global::Ice.InputStream istr)
                {
                    var v = new DatabaseConnectionSetting();
                    v.ice_readMembers(istr);
                    return v;
                }

                private static readonly DatabaseConnectionSetting _nullMarshalValue = new DatabaseConnectionSetting();

                #endregion
            }

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            [global::System.Serializable]
            public partial class ConnectionInfo : global::System.ICloneable
            {
                #region Slice data members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string connectionString;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public int connectionTimeout;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string databaseName;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string dataSource;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string driver;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string serverVersion;

                #endregion

                partial void ice_initialize();

                #region Constructors

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ConnectionInfo()
                {
                    this.connectionString = "";
                    this.databaseName = "";
                    this.dataSource = "";
                    this.driver = "";
                    this.serverVersion = "";
                    ice_initialize();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ConnectionInfo(string connectionString, int connectionTimeout, string databaseName, string dataSource, string driver, string serverVersion)
                {
                    this.connectionString = connectionString;
                    this.connectionTimeout = connectionTimeout;
                    this.databaseName = databaseName;
                    this.dataSource = dataSource;
                    this.driver = driver;
                    this.serverVersion = serverVersion;
                    ice_initialize();
                }

                #endregion

                #region ICloneable members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override int GetHashCode()
                {
                    int h_ = 5381;
                    global::IceInternal.HashUtil.hashAdd(ref h_, "::Ferda::Guha::Data::ConnectionInfo");
                    global::IceInternal.HashUtil.hashAdd(ref h_, connectionString);
                    global::IceInternal.HashUtil.hashAdd(ref h_, connectionTimeout);
                    global::IceInternal.HashUtil.hashAdd(ref h_, databaseName);
                    global::IceInternal.HashUtil.hashAdd(ref h_, dataSource);
                    global::IceInternal.HashUtil.hashAdd(ref h_, driver);
                    global::IceInternal.HashUtil.hashAdd(ref h_, serverVersion);
                    return h_;
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override bool Equals(object other)
                {
                    if(object.ReferenceEquals(this, other))
                    {
                        return true;
                    }
                    if(other == null)
                    {
                        return false;
                    }
                    if(GetType() != other.GetType())
                    {
                        return false;
                    }
                    ConnectionInfo o = (ConnectionInfo)other;
                    if(this.connectionString == null)
                    {
                        if(o.connectionString != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.connectionString.Equals(o.connectionString))
                        {
                            return false;
                        }
                    }
                    if(!this.connectionTimeout.Equals(o.connectionTimeout))
                    {
                        return false;
                    }
                    if(this.databaseName == null)
                    {
                        if(o.databaseName != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.databaseName.Equals(o.databaseName))
                        {
                            return false;
                        }
                    }
                    if(this.dataSource == null)
                    {
                        if(o.dataSource != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.dataSource.Equals(o.dataSource))
                        {
                            return false;
                        }
                    }
                    if(this.driver == null)
                    {
                        if(o.driver != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.driver.Equals(o.driver))
                        {
                            return false;
                        }
                    }
                    if(this.serverVersion == null)
                    {
                        if(o.serverVersion != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.serverVersion.Equals(o.serverVersion))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator==(ConnectionInfo lhs, ConnectionInfo rhs)
                {
                    return Equals(lhs, rhs);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator!=(ConnectionInfo lhs, ConnectionInfo rhs)
                {
                    return !Equals(lhs, rhs);
                }

                #endregion

                #region Marshaling support

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_writeMembers(global::Ice.OutputStream ostr)
                {
                    ostr.writeString(this.connectionString);
                    ostr.writeInt(this.connectionTimeout);
                    ostr.writeString(this.databaseName);
                    ostr.writeString(this.dataSource);
                    ostr.writeString(this.driver);
                    ostr.writeString(this.serverVersion);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_readMembers(global::Ice.InputStream istr)
                {
                    this.connectionString = istr.readString();
                    this.connectionTimeout = istr.readInt();
                    this.databaseName = istr.readString();
                    this.dataSource = istr.readString();
                    this.driver = istr.readString();
                    this.serverVersion = istr.readString();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static void ice_write(global::Ice.OutputStream ostr, ConnectionInfo v)
                {
                    if(v == null)
                    {
                        _nullMarshalValue.ice_writeMembers(ostr);
                    }
                    else
                    {
                        v.ice_writeMembers(ostr);
                    }
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static ConnectionInfo ice_read(global::Ice.InputStream istr)
                {
                    var v = new ConnectionInfo();
                    v.ice_readMembers(istr);
                    return v;
                }

                private static readonly ConnectionInfo _nullMarshalValue = new ConnectionInfo();

                #endregion
            }

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            [global::System.Serializable]
            public partial class DataTableExplain : global::System.ICloneable
            {
                #region Slice data members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string name;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string type;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string remarks;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public long recordsCount;

                #endregion

                partial void ice_initialize();

                #region Constructors

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public DataTableExplain()
                {
                    this.name = "";
                    this.type = "";
                    this.remarks = "";
                    ice_initialize();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public DataTableExplain(string name, string type, string remarks, long recordsCount)
                {
                    this.name = name;
                    this.type = type;
                    this.remarks = remarks;
                    this.recordsCount = recordsCount;
                    ice_initialize();
                }

                #endregion

                #region ICloneable members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override int GetHashCode()
                {
                    int h_ = 5381;
                    global::IceInternal.HashUtil.hashAdd(ref h_, "::Ferda::Guha::Data::DataTableExplain");
                    global::IceInternal.HashUtil.hashAdd(ref h_, name);
                    global::IceInternal.HashUtil.hashAdd(ref h_, type);
                    global::IceInternal.HashUtil.hashAdd(ref h_, remarks);
                    global::IceInternal.HashUtil.hashAdd(ref h_, recordsCount);
                    return h_;
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override bool Equals(object other)
                {
                    if(object.ReferenceEquals(this, other))
                    {
                        return true;
                    }
                    if(other == null)
                    {
                        return false;
                    }
                    if(GetType() != other.GetType())
                    {
                        return false;
                    }
                    DataTableExplain o = (DataTableExplain)other;
                    if(this.name == null)
                    {
                        if(o.name != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.name.Equals(o.name))
                        {
                            return false;
                        }
                    }
                    if(this.type == null)
                    {
                        if(o.type != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.type.Equals(o.type))
                        {
                            return false;
                        }
                    }
                    if(this.remarks == null)
                    {
                        if(o.remarks != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.remarks.Equals(o.remarks))
                        {
                            return false;
                        }
                    }
                    if(!this.recordsCount.Equals(o.recordsCount))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator==(DataTableExplain lhs, DataTableExplain rhs)
                {
                    return Equals(lhs, rhs);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator!=(DataTableExplain lhs, DataTableExplain rhs)
                {
                    return !Equals(lhs, rhs);
                }

                #endregion

                #region Marshaling support

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_writeMembers(global::Ice.OutputStream ostr)
                {
                    ostr.writeString(this.name);
                    ostr.writeString(this.type);
                    ostr.writeString(this.remarks);
                    ostr.writeLong(this.recordsCount);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_readMembers(global::Ice.InputStream istr)
                {
                    this.name = istr.readString();
                    this.type = istr.readString();
                    this.remarks = istr.readString();
                    this.recordsCount = istr.readLong();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static void ice_write(global::Ice.OutputStream ostr, DataTableExplain v)
                {
                    if(v == null)
                    {
                        _nullMarshalValue.ice_writeMembers(ostr);
                    }
                    else
                    {
                        v.ice_writeMembers(ostr);
                    }
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static DataTableExplain ice_read(global::Ice.InputStream istr)
                {
                    var v = new DataTableExplain();
                    v.ice_readMembers(istr);
                    return v;
                }

                private static readonly DataTableExplain _nullMarshalValue = new DataTableExplain();

                #endregion
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public enum DbDataTypeEnum
            {
                UnknownType,
                BooleanType,
                DateTimeType,
                TimeType,
                ShortIntegerType,
                IntegerType,
                LongIntegerType,
                UnsignedShortIntegerType,
                UnsignedIntegerType,
                UnsignedLongIntegerType,
                FloatType,
                DoubleType,
                DecimalType,
                StringType
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public sealed class DbDataTypeEnumHelper
            {
                public static void write(global::Ice.OutputStream ostr, DbDataTypeEnum v)
                {
                    ostr.writeEnum((int)v, 13);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static DbDataTypeEnum read(global::Ice.InputStream istr)
                {
                    DbDataTypeEnum v;
                    v = (DbDataTypeEnum)istr.readEnum(13);
                    return v;
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public enum DbSimpleDataTypeEnum
            {
                UnknownSimpleType,
                BooleanSimpleType,
                DateTimeSimpleType,
                TimeSimpleType,
                ShortSimpleType,
                IntegerSimpleType,
                LongSimpleType,
                FloatSimpleType,
                DoubleSimpleType,
                StringSimpleType
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public sealed class DbSimpleDataTypeEnumHelper
            {
                public static void write(global::Ice.OutputStream ostr, DbSimpleDataTypeEnum v)
                {
                    ostr.writeEnum((int)v, 9);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static DbSimpleDataTypeEnum read(global::Ice.InputStream istr)
                {
                    DbSimpleDataTypeEnum v;
                    v = (DbSimpleDataTypeEnum)istr.readEnum(9);
                    return v;
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public enum CardinalityEnum
            {
                Nominal,
                Ordinal,
                OrdinalCyclic,
                Cardinal
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public sealed class CardinalityEnumHelper
            {
                public static void write(global::Ice.OutputStream ostr, CardinalityEnum v)
                {
                    ostr.writeEnum((int)v, 3);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static CardinalityEnum read(global::Ice.InputStream istr)
                {
                    CardinalityEnum v;
                    v = (CardinalityEnum)istr.readEnum(3);
                    return v;
                }
            }

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            [global::System.Serializable]
            public partial class ColumnExplain : global::System.ICloneable
            {
                #region Slice data members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string name;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public int columnOrdinal;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public int columnSize;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public int numericPrecision;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public int numericScale;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public DbDataTypeEnum dataType;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public int providerType;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public bool isLong;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public bool allowDBNull;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public bool isReadOnly;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public bool isRowVersion;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public bool isUnique;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public bool isKey;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public bool isAutoIncrement;

                #endregion

                partial void ice_initialize();

                #region Constructors

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ColumnExplain()
                {
                    this.name = "";
                    ice_initialize();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ColumnExplain(string name, int columnOrdinal, int columnSize, int numericPrecision, int numericScale, DbDataTypeEnum dataType, int providerType, bool isLong, bool allowDBNull, bool isReadOnly, bool isRowVersion, bool isUnique, bool isKey, bool isAutoIncrement)
                {
                    this.name = name;
                    this.columnOrdinal = columnOrdinal;
                    this.columnSize = columnSize;
                    this.numericPrecision = numericPrecision;
                    this.numericScale = numericScale;
                    this.dataType = dataType;
                    this.providerType = providerType;
                    this.isLong = isLong;
                    this.allowDBNull = allowDBNull;
                    this.isReadOnly = isReadOnly;
                    this.isRowVersion = isRowVersion;
                    this.isUnique = isUnique;
                    this.isKey = isKey;
                    this.isAutoIncrement = isAutoIncrement;
                    ice_initialize();
                }

                #endregion

                #region ICloneable members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override int GetHashCode()
                {
                    int h_ = 5381;
                    global::IceInternal.HashUtil.hashAdd(ref h_, "::Ferda::Guha::Data::ColumnExplain");
                    global::IceInternal.HashUtil.hashAdd(ref h_, name);
                    global::IceInternal.HashUtil.hashAdd(ref h_, columnOrdinal);
                    global::IceInternal.HashUtil.hashAdd(ref h_, columnSize);
                    global::IceInternal.HashUtil.hashAdd(ref h_, numericPrecision);
                    global::IceInternal.HashUtil.hashAdd(ref h_, numericScale);
                    global::IceInternal.HashUtil.hashAdd(ref h_, dataType);
                    global::IceInternal.HashUtil.hashAdd(ref h_, providerType);
                    global::IceInternal.HashUtil.hashAdd(ref h_, isLong);
                    global::IceInternal.HashUtil.hashAdd(ref h_, allowDBNull);
                    global::IceInternal.HashUtil.hashAdd(ref h_, isReadOnly);
                    global::IceInternal.HashUtil.hashAdd(ref h_, isRowVersion);
                    global::IceInternal.HashUtil.hashAdd(ref h_, isUnique);
                    global::IceInternal.HashUtil.hashAdd(ref h_, isKey);
                    global::IceInternal.HashUtil.hashAdd(ref h_, isAutoIncrement);
                    return h_;
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override bool Equals(object other)
                {
                    if(object.ReferenceEquals(this, other))
                    {
                        return true;
                    }
                    if(other == null)
                    {
                        return false;
                    }
                    if(GetType() != other.GetType())
                    {
                        return false;
                    }
                    ColumnExplain o = (ColumnExplain)other;
                    if(this.name == null)
                    {
                        if(o.name != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.name.Equals(o.name))
                        {
                            return false;
                        }
                    }
                    if(!this.columnOrdinal.Equals(o.columnOrdinal))
                    {
                        return false;
                    }
                    if(!this.columnSize.Equals(o.columnSize))
                    {
                        return false;
                    }
                    if(!this.numericPrecision.Equals(o.numericPrecision))
                    {
                        return false;
                    }
                    if(!this.numericScale.Equals(o.numericScale))
                    {
                        return false;
                    }
                    if(!this.dataType.Equals(o.dataType))
                    {
                        return false;
                    }
                    if(!this.providerType.Equals(o.providerType))
                    {
                        return false;
                    }
                    if(!this.isLong.Equals(o.isLong))
                    {
                        return false;
                    }
                    if(!this.allowDBNull.Equals(o.allowDBNull))
                    {
                        return false;
                    }
                    if(!this.isReadOnly.Equals(o.isReadOnly))
                    {
                        return false;
                    }
                    if(!this.isRowVersion.Equals(o.isRowVersion))
                    {
                        return false;
                    }
                    if(!this.isUnique.Equals(o.isUnique))
                    {
                        return false;
                    }
                    if(!this.isKey.Equals(o.isKey))
                    {
                        return false;
                    }
                    if(!this.isAutoIncrement.Equals(o.isAutoIncrement))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator==(ColumnExplain lhs, ColumnExplain rhs)
                {
                    return Equals(lhs, rhs);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator!=(ColumnExplain lhs, ColumnExplain rhs)
                {
                    return !Equals(lhs, rhs);
                }

                #endregion

                #region Marshaling support

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_writeMembers(global::Ice.OutputStream ostr)
                {
                    ostr.writeString(this.name);
                    ostr.writeInt(this.columnOrdinal);
                    ostr.writeInt(this.columnSize);
                    ostr.writeInt(this.numericPrecision);
                    ostr.writeInt(this.numericScale);
                    ostr.writeEnum((int)this.dataType, 13);
                    ostr.writeInt(this.providerType);
                    ostr.writeBool(this.isLong);
                    ostr.writeBool(this.allowDBNull);
                    ostr.writeBool(this.isReadOnly);
                    ostr.writeBool(this.isRowVersion);
                    ostr.writeBool(this.isUnique);
                    ostr.writeBool(this.isKey);
                    ostr.writeBool(this.isAutoIncrement);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_readMembers(global::Ice.InputStream istr)
                {
                    this.name = istr.readString();
                    this.columnOrdinal = istr.readInt();
                    this.columnSize = istr.readInt();
                    this.numericPrecision = istr.readInt();
                    this.numericScale = istr.readInt();
                    this.dataType = (DbDataTypeEnum)istr.readEnum(13);
                    this.providerType = istr.readInt();
                    this.isLong = istr.readBool();
                    this.allowDBNull = istr.readBool();
                    this.isReadOnly = istr.readBool();
                    this.isRowVersion = istr.readBool();
                    this.isUnique = istr.readBool();
                    this.isKey = istr.readBool();
                    this.isAutoIncrement = istr.readBool();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static void ice_write(global::Ice.OutputStream ostr, ColumnExplain v)
                {
                    if(v == null)
                    {
                        _nullMarshalValue.ice_writeMembers(ostr);
                    }
                    else
                    {
                        v.ice_writeMembers(ostr);
                    }
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static ColumnExplain ice_read(global::Ice.InputStream istr)
                {
                    var v = new ColumnExplain();
                    v.ice_readMembers(istr);
                    return v;
                }

                private static readonly ColumnExplain _nullMarshalValue = new ColumnExplain();

                #endregion
            }

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            [global::System.Serializable]
            public partial class ColumnStatistics : global::System.ICloneable
            {
                #region Slice data members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string valueMin;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string valueMax;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string valueAverage;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public double valueVariability;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public double valueStandardDeviation;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public long valueDistincts;

                #endregion

                partial void ice_initialize();

                #region Constructors

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ColumnStatistics()
                {
                    this.valueMin = "";
                    this.valueMax = "";
                    this.valueAverage = "";
                    ice_initialize();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ColumnStatistics(string valueMin, string valueMax, string valueAverage, double valueVariability, double valueStandardDeviation, long valueDistincts)
                {
                    this.valueMin = valueMin;
                    this.valueMax = valueMax;
                    this.valueAverage = valueAverage;
                    this.valueVariability = valueVariability;
                    this.valueStandardDeviation = valueStandardDeviation;
                    this.valueDistincts = valueDistincts;
                    ice_initialize();
                }

                #endregion

                #region ICloneable members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override int GetHashCode()
                {
                    int h_ = 5381;
                    global::IceInternal.HashUtil.hashAdd(ref h_, "::Ferda::Guha::Data::ColumnStatistics");
                    global::IceInternal.HashUtil.hashAdd(ref h_, valueMin);
                    global::IceInternal.HashUtil.hashAdd(ref h_, valueMax);
                    global::IceInternal.HashUtil.hashAdd(ref h_, valueAverage);
                    global::IceInternal.HashUtil.hashAdd(ref h_, valueVariability);
                    global::IceInternal.HashUtil.hashAdd(ref h_, valueStandardDeviation);
                    global::IceInternal.HashUtil.hashAdd(ref h_, valueDistincts);
                    return h_;
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override bool Equals(object other)
                {
                    if(object.ReferenceEquals(this, other))
                    {
                        return true;
                    }
                    if(other == null)
                    {
                        return false;
                    }
                    if(GetType() != other.GetType())
                    {
                        return false;
                    }
                    ColumnStatistics o = (ColumnStatistics)other;
                    if(this.valueMin == null)
                    {
                        if(o.valueMin != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.valueMin.Equals(o.valueMin))
                        {
                            return false;
                        }
                    }
                    if(this.valueMax == null)
                    {
                        if(o.valueMax != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.valueMax.Equals(o.valueMax))
                        {
                            return false;
                        }
                    }
                    if(this.valueAverage == null)
                    {
                        if(o.valueAverage != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.valueAverage.Equals(o.valueAverage))
                        {
                            return false;
                        }
                    }
                    if(!this.valueVariability.Equals(o.valueVariability))
                    {
                        return false;
                    }
                    if(!this.valueStandardDeviation.Equals(o.valueStandardDeviation))
                    {
                        return false;
                    }
                    if(!this.valueDistincts.Equals(o.valueDistincts))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator==(ColumnStatistics lhs, ColumnStatistics rhs)
                {
                    return Equals(lhs, rhs);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator!=(ColumnStatistics lhs, ColumnStatistics rhs)
                {
                    return !Equals(lhs, rhs);
                }

                #endregion

                #region Marshaling support

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_writeMembers(global::Ice.OutputStream ostr)
                {
                    ostr.writeString(this.valueMin);
                    ostr.writeString(this.valueMax);
                    ostr.writeString(this.valueAverage);
                    ostr.writeDouble(this.valueVariability);
                    ostr.writeDouble(this.valueStandardDeviation);
                    ostr.writeLong(this.valueDistincts);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_readMembers(global::Ice.InputStream istr)
                {
                    this.valueMin = istr.readString();
                    this.valueMax = istr.readString();
                    this.valueAverage = istr.readString();
                    this.valueVariability = istr.readDouble();
                    this.valueStandardDeviation = istr.readDouble();
                    this.valueDistincts = istr.readLong();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static void ice_write(global::Ice.OutputStream ostr, ColumnStatistics v)
                {
                    if(v == null)
                    {
                        _nullMarshalValue.ice_writeMembers(ostr);
                    }
                    else
                    {
                        v.ice_writeMembers(ostr);
                    }
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static ColumnStatistics ice_read(global::Ice.InputStream istr)
                {
                    var v = new ColumnStatistics();
                    v.ice_readMembers(istr);
                    return v;
                }

                private static readonly ColumnStatistics _nullMarshalValue = new ColumnStatistics();

                #endregion
            }

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            [global::System.Serializable]
            public partial class ValueFrequencyPair : global::System.ICloneable
            {
                #region Slice data members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public string value;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public double frequency;

                #endregion

                partial void ice_initialize();

                #region Constructors

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ValueFrequencyPair()
                {
                    this.value = "";
                    ice_initialize();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ValueFrequencyPair(string value, double frequency)
                {
                    this.value = value;
                    this.frequency = frequency;
                    ice_initialize();
                }

                #endregion

                #region ICloneable members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override int GetHashCode()
                {
                    int h_ = 5381;
                    global::IceInternal.HashUtil.hashAdd(ref h_, "::Ferda::Guha::Data::ValueFrequencyPair");
                    global::IceInternal.HashUtil.hashAdd(ref h_, value);
                    global::IceInternal.HashUtil.hashAdd(ref h_, frequency);
                    return h_;
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override bool Equals(object other)
                {
                    if(object.ReferenceEquals(this, other))
                    {
                        return true;
                    }
                    if(other == null)
                    {
                        return false;
                    }
                    if(GetType() != other.GetType())
                    {
                        return false;
                    }
                    ValueFrequencyPair o = (ValueFrequencyPair)other;
                    if(this.value == null)
                    {
                        if(o.value != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!this.value.Equals(o.value))
                        {
                            return false;
                        }
                    }
                    if(!this.frequency.Equals(o.frequency))
                    {
                        return false;
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator==(ValueFrequencyPair lhs, ValueFrequencyPair rhs)
                {
                    return Equals(lhs, rhs);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator!=(ValueFrequencyPair lhs, ValueFrequencyPair rhs)
                {
                    return !Equals(lhs, rhs);
                }

                #endregion

                #region Marshaling support

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_writeMembers(global::Ice.OutputStream ostr)
                {
                    ostr.writeString(this.value);
                    ostr.writeDouble(this.frequency);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_readMembers(global::Ice.InputStream istr)
                {
                    this.value = istr.readString();
                    this.frequency = istr.readDouble();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static void ice_write(global::Ice.OutputStream ostr, ValueFrequencyPair v)
                {
                    if(v == null)
                    {
                        _nullMarshalValue.ice_writeMembers(ostr);
                    }
                    else
                    {
                        v.ice_writeMembers(ostr);
                    }
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static ValueFrequencyPair ice_read(global::Ice.InputStream istr)
                {
                    var v = new ValueFrequencyPair();
                    v.ice_readMembers(istr);
                    return v;
                }

                private static readonly ValueFrequencyPair _nullMarshalValue = new ValueFrequencyPair();

                #endregion
            }

            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
            [global::System.Serializable]
            public partial class ValuesAndFrequencies : global::System.ICloneable
            {
                #region Slice data members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public DbDataTypeEnum dataType;

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ValueFrequencyPair[] data;

                #endregion

                partial void ice_initialize();

                #region Constructors

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ValuesAndFrequencies()
                {
                    ice_initialize();
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public ValuesAndFrequencies(DbDataTypeEnum dataType, ValueFrequencyPair[] data)
                {
                    this.dataType = dataType;
                    this.data = data;
                    ice_initialize();
                }

                #endregion

                #region ICloneable members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public object Clone()
                {
                    return MemberwiseClone();
                }

                #endregion

                #region Object members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override int GetHashCode()
                {
                    int h_ = 5381;
                    global::IceInternal.HashUtil.hashAdd(ref h_, "::Ferda::Guha::Data::ValuesAndFrequencies");
                    global::IceInternal.HashUtil.hashAdd(ref h_, dataType);
                    global::IceInternal.HashUtil.hashAdd(ref h_, data);
                    return h_;
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public override bool Equals(object other)
                {
                    if(object.ReferenceEquals(this, other))
                    {
                        return true;
                    }
                    if(other == null)
                    {
                        return false;
                    }
                    if(GetType() != other.GetType())
                    {
                        return false;
                    }
                    ValuesAndFrequencies o = (ValuesAndFrequencies)other;
                    if(!this.dataType.Equals(o.dataType))
                    {
                        return false;
                    }
                    if(this.data == null)
                    {
                        if(o.data != null)
                        {
                            return false;
                        }
                    }
                    else
                    {
                        if(!IceUtilInternal.Arrays.Equals(this.data, o.data))
                        {
                            return false;
                        }
                    }
                    return true;
                }

                #endregion

                #region Comparison members

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator==(ValuesAndFrequencies lhs, ValuesAndFrequencies rhs)
                {
                    return Equals(lhs, rhs);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static bool operator!=(ValuesAndFrequencies lhs, ValuesAndFrequencies rhs)
                {
                    return !Equals(lhs, rhs);
                }

                #endregion

                #region Marshaling support

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_writeMembers(global::Ice.OutputStream ostr)
                {
                    ostr.writeEnum((int)this.dataType, 13);
                    ValueFrequencyPairSeqHelper.write(ostr, this.data);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public void ice_readMembers(global::Ice.InputStream istr)
                {
                    this.dataType = (DbDataTypeEnum)istr.readEnum(13);
                    this.data = ValueFrequencyPairSeqHelper.read(istr);
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static void ice_write(global::Ice.OutputStream ostr, ValuesAndFrequencies v)
                {
                    if(v == null)
                    {
                        _nullMarshalValue.ice_writeMembers(ostr);
                    }
                    else
                    {
                        v.ice_writeMembers(ostr);
                    }
                }

                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
                public static ValuesAndFrequencies ice_read(global::Ice.InputStream istr)
                {
                    var v = new ValuesAndFrequencies();
                    v.ice_readMembers(istr);
                    return v;
                }

                private static readonly ValuesAndFrequencies _nullMarshalValue = new ValuesAndFrequencies();

                #endregion
            }
        }
    }
}

namespace Ferda
{
    namespace Guha
    {
        namespace Data
        {
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public sealed class DataTableExplainSeqHelper
            {
                public static void write(global::Ice.OutputStream ostr, DataTableExplain[] v)
                {
                    if(v == null)
                    {
                        ostr.writeSize(0);
                    }
                    else
                    {
                        ostr.writeSize(v.Length);
                        for(int ix = 0; ix < v.Length; ++ix)
                        {
                            (v[ix] == null ? new DataTableExplain() : v[ix]).ice_writeMembers(ostr);
                        }
                    }
                }

                public static DataTableExplain[] read(global::Ice.InputStream istr)
                {
                    DataTableExplain[] v;
                    {
                        int szx = istr.readAndCheckSeqSize(11);
                        v = new DataTableExplain[szx];
                        for(int ix = 0; ix < szx; ++ix)
                        {
                            v[ix] = new DataTableExplain();
                            v[ix].ice_readMembers(istr);
                        }
                    }
                    return v;
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public sealed class ColumnExplainSeqHelper
            {
                public static void write(global::Ice.OutputStream ostr, ColumnExplain[] v)
                {
                    if(v == null)
                    {
                        ostr.writeSize(0);
                    }
                    else
                    {
                        ostr.writeSize(v.Length);
                        for(int ix = 0; ix < v.Length; ++ix)
                        {
                            (v[ix] == null ? new ColumnExplain() : v[ix]).ice_writeMembers(ostr);
                        }
                    }
                }

                public static ColumnExplain[] read(global::Ice.InputStream istr)
                {
                    ColumnExplain[] v;
                    {
                        int szx = istr.readAndCheckSeqSize(29);
                        v = new ColumnExplain[szx];
                        for(int ix = 0; ix < szx; ++ix)
                        {
                            v[ix] = new ColumnExplain();
                            v[ix].ice_readMembers(istr);
                        }
                    }
                    return v;
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
            public sealed class ValueFrequencyPairSeqHelper
            {
                public static void write(global::Ice.OutputStream ostr, ValueFrequencyPair[] v)
                {
                    if(v == null)
                    {
                        ostr.writeSize(0);
                    }
                    else
                    {
                        ostr.writeSize(v.Length);
                        for(int ix = 0; ix < v.Length; ++ix)
                        {
                            (v[ix] == null ? new ValueFrequencyPair() : v[ix]).ice_writeMembers(ostr);
                        }
                    }
                }

                public static ValueFrequencyPair[] read(global::Ice.InputStream istr)
                {
                    ValueFrequencyPair[] v;
                    {
                        int szx = istr.readAndCheckSeqSize(9);
                        v = new ValueFrequencyPair[szx];
                        for(int ix = 0; ix < szx; ++ix)
                        {
                            v[ix] = new ValueFrequencyPair();
                            v[ix].ice_readMembers(istr);
                        }
                    }
                    return v;
                }
            }
        }
    }
}
