//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.7
//
// <auto-generated>
//
// Generated from file `BuiltinSequences.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;

#pragma warning disable 1591

namespace Ferda
{
    namespace Modules
    {
    }
}

namespace Ferda
{
    namespace Modules
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class BoolSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, bool[] v)
            {
                ostr.writeBoolSeq(v);
            }

            public static bool[] read(global::Ice.InputStream istr)
            {
                bool[] v;
                v = istr.readBoolSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class ByteSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, byte[] v)
            {
                ostr.writeByteSeq(v);
            }

            public static byte[] read(global::Ice.InputStream istr)
            {
                byte[] v;
                v = istr.readByteSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class StringSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, string[] v)
            {
                ostr.writeStringSeq(v);
            }

            public static string[] read(global::Ice.InputStream istr)
            {
                string[] v;
                v = istr.readStringSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class StringSeqSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, string[][] v)
            {
                if(v == null)
                {
                    ostr.writeSize(0);
                }
                else
                {
                    ostr.writeSize(v.Length);
                    for(int ix = 0; ix < v.Length; ++ix)
                    {
                        StringSeqHelper.write(ostr, v[ix]);
                    }
                }
            }

            public static string[][] read(global::Ice.InputStream istr)
            {
                string[][] v;
                {
                    int szx = istr.readAndCheckSeqSize(1);
                    v = new string[szx][];
                    for(int ix = 0; ix < szx; ++ix)
                    {
                        v[ix] = StringSeqHelper.read(istr);
                    }
                }
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class IntSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, int[] v)
            {
                ostr.writeIntSeq(v);
            }

            public static int[] read(global::Ice.InputStream istr)
            {
                int[] v;
                v = istr.readIntSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class IntSeqSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, int[][] v)
            {
                if(v == null)
                {
                    ostr.writeSize(0);
                }
                else
                {
                    ostr.writeSize(v.Length);
                    for(int ix = 0; ix < v.Length; ++ix)
                    {
                        IntSeqHelper.write(ostr, v[ix]);
                    }
                }
            }

            public static int[][] read(global::Ice.InputStream istr)
            {
                int[][] v;
                {
                    int szx = istr.readAndCheckSeqSize(1);
                    v = new int[szx][];
                    for(int ix = 0; ix < szx; ++ix)
                    {
                        v[ix] = IntSeqHelper.read(istr);
                    }
                }
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class LongSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, long[] v)
            {
                ostr.writeLongSeq(v);
            }

            public static long[] read(global::Ice.InputStream istr)
            {
                long[] v;
                v = istr.readLongSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class LongSeqSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, long[][] v)
            {
                if(v == null)
                {
                    ostr.writeSize(0);
                }
                else
                {
                    ostr.writeSize(v.Length);
                    for(int ix = 0; ix < v.Length; ++ix)
                    {
                        LongSeqHelper.write(ostr, v[ix]);
                    }
                }
            }

            public static long[][] read(global::Ice.InputStream istr)
            {
                long[][] v;
                {
                    int szx = istr.readAndCheckSeqSize(1);
                    v = new long[szx][];
                    for(int ix = 0; ix < szx; ++ix)
                    {
                        v[ix] = LongSeqHelper.read(istr);
                    }
                }
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class DoubleSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, double[] v)
            {
                ostr.writeDoubleSeq(v);
            }

            public static double[] read(global::Ice.InputStream istr)
            {
                double[] v;
                v = istr.readDoubleSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class DoubleSeqSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, double[][] v)
            {
                if(v == null)
                {
                    ostr.writeSize(0);
                }
                else
                {
                    ostr.writeSize(v.Length);
                    for(int ix = 0; ix < v.Length; ++ix)
                    {
                        DoubleSeqHelper.write(ostr, v[ix]);
                    }
                }
            }

            public static double[][] read(global::Ice.InputStream istr)
            {
                double[][] v;
                {
                    int szx = istr.readAndCheckSeqSize(1);
                    v = new double[szx][];
                    for(int ix = 0; ix < szx; ++ix)
                    {
                        v[ix] = DoubleSeqHelper.read(istr);
                    }
                }
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class FloatSeqHelper
        {
            public static void write(global::Ice.OutputStream ostr, float[] v)
            {
                ostr.writeFloatSeq(v);
            }

            public static float[] read(global::Ice.InputStream istr)
            {
                float[] v;
                v = istr.readFloatSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class BoolOptHelper
        {
            public static void write(global::Ice.OutputStream ostr, bool[] v)
            {
                ostr.writeBoolSeq(v);
            }

            public static bool[] read(global::Ice.InputStream istr)
            {
                bool[] v;
                v = istr.readBoolSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class ShortOptHelper
        {
            public static void write(global::Ice.OutputStream ostr, short[] v)
            {
                ostr.writeShortSeq(v);
            }

            public static short[] read(global::Ice.InputStream istr)
            {
                short[] v;
                v = istr.readShortSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class IntOptHelper
        {
            public static void write(global::Ice.OutputStream ostr, int[] v)
            {
                ostr.writeIntSeq(v);
            }

            public static int[] read(global::Ice.InputStream istr)
            {
                int[] v;
                v = istr.readIntSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class LongOptHelper
        {
            public static void write(global::Ice.OutputStream ostr, long[] v)
            {
                ostr.writeLongSeq(v);
            }

            public static long[] read(global::Ice.InputStream istr)
            {
                long[] v;
                v = istr.readLongSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class FloatOptHelper
        {
            public static void write(global::Ice.OutputStream ostr, float[] v)
            {
                ostr.writeFloatSeq(v);
            }

            public static float[] read(global::Ice.InputStream istr)
            {
                float[] v;
                v = istr.readFloatSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class DoubleOptHelper
        {
            public static void write(global::Ice.OutputStream ostr, double[] v)
            {
                ostr.writeDoubleSeq(v);
            }

            public static double[] read(global::Ice.InputStream istr)
            {
                double[] v;
                v = istr.readDoubleSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class StringOptHelper
        {
            public static void write(global::Ice.OutputStream ostr, string[] v)
            {
                ostr.writeStringSeq(v);
            }

            public static string[] read(global::Ice.InputStream istr)
            {
                string[] v;
                v = istr.readStringSeq();
                return v;
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.7.7")]
        public sealed class ByteSeqOptHelper
        {
            public static void write(global::Ice.OutputStream ostr, byte[] v)
            {
                ostr.writeByteSeq(v);
            }

            public static byte[] read(global::Ice.InputStream istr)
            {
                byte[] v;
                v = istr.readByteSeq();
                return v;
            }
        }
    }
}
