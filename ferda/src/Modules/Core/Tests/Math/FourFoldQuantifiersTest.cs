// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Tests.Math
{
    /// <summary>
    ///This is a test class for Ferda.Guha.Math.Quantifiers.ChiSquare and is intended
    ///to contain all Ferda.Guha.Math.Quantifiers.ChiSquare Unit Tests
    ///</summary>
    [TestClass()]
    public class ChiSquareTest
    {
        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get { return testContextInstance; }
            set { testContextInstance = value; }
        }

        #region Additional test attributes

        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //

        #endregion

        /// <summary>
        ///A test for Value (double[,], double)
        ///</summary>
        [TestMethod()]
        public void ValueTest()
        {
            //ChiSquare target = new ChiSquare();

            //double[,] contingencyTable = new double[2, 2] { { 113, 221 }, { 21, 22 } };

            //double denominator = 1; // TODO: Initialize to an appropriate value

            //double expected = 0;
            //double actual;

            ////actual = target.Value(new QuantifierData(contingencyTable, denominator, 0, RelationEnum.GreaterOrEqual, null));
            //actual = 0;

            //Assert.AreEqual(expected, actual, "Ferda.Guha.Math.Quantifiers.ChiSquare.Value did not return the expected value.");
            //Assert.Inconclusive("Verify the correctness of this test method.");
        }
    }
}