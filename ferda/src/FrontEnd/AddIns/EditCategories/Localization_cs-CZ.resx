<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LabelLeftBoundType" xml:space="preserve">
    <value>Typ spodní hranice</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Storno</value>
  </data>
  <data name="IntervalIsDisjunct" xml:space="preserve">
    <value>Interval je disjunktní</value>
  </data>
  <data name="LabelLeftBoundValue" xml:space="preserve">
    <value>Hodnota spodní hranice</value>
  </data>
  <data name="ButtonSplitRecursive" xml:space="preserve">
    <value>Rozdělit rekurzivně</value>
  </data>
  <data name="ButtonCheck" xml:space="preserve">
    <value>Přidat do kategorie</value>
  </data>
  <data name="InsufficientIntervalParameters" xml:space="preserve">
    <value>Zadejte správně všechny parametry</value>
  </data>
  <data name="ColumnCategoryValue" xml:space="preserve">
    <value>Hodnota kategorie</value>
  </data>
  <data name="BadColumnSelectExpression" xml:space="preserve">
    <value>Neplatný výraz pro výběr sloupce</value>
  </data>
  <data name="IntervalCanBeAdded" xml:space="preserve">
    <value>Interval může být přidán</value>
  </data>
  <data name="ButtonEdit" xml:space="preserve">
    <value>Upravit</value>
  </data>
  <data name="IntervalIsNotDisjunct" xml:space="preserve">
    <value>Interval není disjunktní</value>
  </data>
  <data name="ButtonJoin" xml:space="preserve">
    <value>Spojit</value>
  </data>
  <data name="ButtonSubmit" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="EditCategories" xml:space="preserve">
    <value>Upravit kategorie</value>
  </data>
  <data name="LabelRightBoundType" xml:space="preserve">
    <value>Typ horní hranice</value>
  </data>
  <data name="SameCategoryNames" xml:space="preserve">
    <value>Kategorie se stejným názvem nejsou povoleny</value>
  </data>
  <data name="ButtonSaveAndQuit" xml:space="preserve">
    <value>Uložit a ukončit</value>
  </data>
  <data name="ButtonRename" xml:space="preserve">
    <value>Přejmenovat</value>
  </data>
  <data name="BoxNotConnected" xml:space="preserve">
    <value>Krabička není zapojena</value>
  </data>
  <data name="InvalidIntervalError" xml:space="preserve">
    <value>Neplatný interval</value>
  </data>
  <data name="ButtonFlatten" xml:space="preserve">
    <value>Rozdělit vše rekurzivně</value>
  </data>
  <data name="RadioPlusInfinity" xml:space="preserve">
    <value>+ inf</value>
  </data>
  <data name="EditCategoriesAbout" xml:space="preserve">
    <value>Modul pro úpravu kategorii</value>
  </data>
  <data name="ButtonNew" xml:space="preserve">
    <value>Vytvořit</value>
  </data>
  <data name="ButtonSplit" xml:space="preserve">
    <value>Rozdělit</value>
  </data>
  <data name="RadioMinusInfinity" xml:space="preserve">
    <value>- inf</value>
  </data>
  <data name="ButtonRemoveText" xml:space="preserve">
    <value>&lt;&lt;</value>
  </data>
  <data name="NewName" xml:space="preserve">
    <value>Nová kategorie</value>
  </data>
  <data name="ButtonQuitWithoutSave" xml:space="preserve">
    <value>Ukončit bez uložení</value>
  </data>
  <data name="ColumnFrequency" xml:space="preserve">
    <value>Frekvence</value>
  </data>
  <data name="BadConnectionString" xml:space="preserve">
    <value>Neplatný řetězec pro připojení</value>
  </data>
  <data name="ButtonDelete" xml:space="preserve">
    <value>Smazat</value>
  </data>
  <data name="LabelAvailableValues" xml:space="preserve">
    <value>Přípustné hodnoty</value>
  </data>
  <data name="NewInterval" xml:space="preserve">
    <value>Nový interval</value>
  </data>
  <data name="ColumnCategoryName" xml:space="preserve">
    <value>Název kategorie</value>
  </data>
  <data name="LabelNewName" xml:space="preserve">
    <value>Nový název</value>
  </data>
  <data name="LabeRightBoundValue" xml:space="preserve">
    <value>Hodnota horní hranice</value>
  </data>
  <data name="ButtonAddText" xml:space="preserve">
    <value>&gt;&gt;</value>
  </data>
  <data name="NewEnumeration" xml:space="preserve">
    <value>Nový výčet</value>
  </data>
  <data name="ColumnCategoryType" xml:space="preserve">
    <value>Druh kategorie</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Chyba</value>
  </data>
  <data name="LabelExistingValues" xml:space="preserve">
    <value>Obsažené hodnoty</value>
  </data>
  <data name="TypeInterval" xml:space="preserve">
    <value>Interval</value>
  </data>
  <data name="TypeSet" xml:space="preserve">
    <value>Výčet</value>
  </data>
  <data name="LabelIntervals" xml:space="preserve">
    <value>Intervaly (dvojklik pro smazání)</value>
  </data>
  <data name="NoEmptyCategoryAllowed" xml:space="preserve">
    <value>Kategorie nemůže být prázdná</value>
  </data>
  <data name="BadIntervalType" xml:space="preserve">
    <value>Intervaly v jedné kategorii musejí být stejného druhu</value>
  </data>
  <data name="Float" xml:space="preserve">
    <value>Float</value>
  </data>
  <data name="LabelIntervalType" xml:space="preserve">
    <value>Druh intervalu</value>
  </data>
  <data name="Long" xml:space="preserve">
    <value>Long</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Nápověda</value>
  </data>
  <data name="IntervalsNotAllowed" xml:space="preserve">
    <value>Tato kategorie nemůže obsahovat intervaly</value>
  </data>
  <data name="InvalidIntervalType" xml:space="preserve">
    <value>Nepodporovaný typ intervalu</value>
  </data>
  <data name="InvalidEnumerationType" xml:space="preserve">
    <value>Nepodporovaný typ výčtu</value>
  </data>
</root>