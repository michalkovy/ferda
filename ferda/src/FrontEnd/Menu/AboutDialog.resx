<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PImage.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>